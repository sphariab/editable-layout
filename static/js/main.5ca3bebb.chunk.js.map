{"version":3,"sources":["components/Layout.js","components/Input.js","App.js","index.js"],"names":["Layout","props","text","location","state","useState","edit","columns","setTextColumns","numberOfColumns","setNumColumns","pageText","setText","handleColumns","slicedText","length","i","substr","handleEdit","index","map","item","indexItem","className","onClick","style","width","cols","rows","onChange","e","colNumber","editedColumns","target","value","editedColumnsString","join","handleChange","onBlur","Input","event","history","push","pathname","gotToLayoutPage","App","basename","process","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAoFeA,MAjFf,SAAgBC,GAAQ,IACdC,EAASD,EAAME,SAASC,MAAxBF,KADa,EAEaG,mBAAS,CAAC,CAACH,KAAKA,EAAMI,MAAM,KAFzC,mBAEdC,EAFc,KAELC,EAFK,OAGoBH,mBAAS,GAH7B,mBAGdI,EAHc,KAGGC,EAHH,OAIOL,mBAASH,GAJhB,mBAIdS,EAJc,KAIJC,EAJI,KAMfC,EAAgB,SAACJ,EAAiBP,GACtCQ,EAAcD,GAId,IAHA,IAAIK,EAAa,GACbC,EAASb,EAAKa,OAETC,EAAI,EAAGA,EAAIP,EAAiBO,IACnCF,EAAU,sBAAOA,GAAP,CAAmB,CAACZ,KAAMA,EAAKe,OAAO,EAAGF,EAAON,GAAkBH,MAAM,KAClFJ,EAAOA,EAAKe,OAAOF,EAASN,GAG9BD,EAAeM,IAGXI,EAAa,SAACC,GAClBX,EAAeD,EAAQa,KAAI,SAACC,EAAMC,GAEhC,OADsBD,EAAKf,KAA3BgB,IAAcH,EACPE,OAiBX,OACE,yBAAKE,UAAU,gBACb,2CACA,4BACEC,QAAS,kBAAMX,EAAc,EAAGF,IAChCY,UAAU,2BAGZ,4BACEC,QAAS,kBAAMX,EAAc,EAAGF,IAChCY,UAAU,2BAGZ,4BACEC,QAAS,kBAAMX,EAAc,EAAGF,IAChCY,UAAU,6BAGZ,yBAAKA,UAAU,OACfhB,EAAQa,KAAI,SAACC,EAAMF,GAAP,OAA+B,IAAdE,EAAKf,KACjC,yBACEkB,QAAS,kBAAMN,EAAWC,IAC1BM,MAAO,CAACC,MAAM,aAAD,OAAejB,EAAf,MACbc,UAAU,QAETF,EAAKnB,MAER,8BACEyB,KAAO,KACPC,KAAO,KACPC,SAAU,SAACC,GAAD,OA3CI,SAACA,EAAGC,GACvB,IAAIC,EAAgBzB,EAAQa,KAAI,SAACC,EAAMC,GAKrC,OAJIA,IAAcS,IAChBV,EAAKnB,KAAO4B,EAAEG,OAAOC,OAGhBb,KAELc,EAAsBH,EAAcZ,KAAI,SAAAC,GAAI,OAAIA,EAAKnB,QAAMkC,OAC/D5B,EAAewB,GACfpB,EAAQuB,GAiCaE,CAAaP,EAAGX,IAChCe,MAAOb,EAAKnB,KACZoC,OAAQ,kBAAMpB,EAAWG,EAAKf,OAC9BmB,MAAO,CAACC,MAAM,aAAD,OAAejB,EAAf,MACbc,UAAU,e,MCjDJgB,MAjBf,SAAetC,GAAQ,IAAD,EACII,mBAAS,IADb,mBACbH,EADa,KACPU,EADO,KAGpB,OACE,yBAAKW,UAAU,uBACb,8BACEA,UAAU,cACVM,SAAU,SAACW,GAAW5B,EAAQ4B,EAAMP,OAAOC,UAE7C,4BACEV,QAAS,kBAjBjB,SAA0BvB,EAAOC,GAC/BD,EAAMwC,QAAQC,KAAK,CACjBC,SAAS,UACTvC,MAAO,CAAEF,KAAMA,KAcI0C,CAAgB3C,EAAOC,IACtCqB,UAAU,UAFZ,YCDSsB,MAbf,WACE,OACE,kBAAC,IAAD,CAAQC,SAAQ,UAAKC,mBAAL,MACd,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWlD,IACvC,kBAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,IAAIC,UAAWX,QCP3CY,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5ca3bebb.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport \"../styles/layoutStyles.css\"\n\nfunction Layout(props) {\n  const { text } = props.location.state\n  const [columns, setTextColumns] = useState([{text:text, edit: false}]);\n  const [numberOfColumns, setNumColumns] = useState(1);\n  const [pageText, setText] = useState(text);\n\n  const handleColumns = (numberOfColumns, text) => {\n    setNumColumns(numberOfColumns)\n    let slicedText = []\n    let length = text.length\n\n    for (let i = 0; i < numberOfColumns; i++) {\n      slicedText = [...slicedText, {text: text.substr(0, length/numberOfColumns), edit: false}]\n      text = text.substr(length / numberOfColumns)\n    }\n\n    setTextColumns(slicedText)\n  }\n\n  const handleEdit = (index) => {\n    setTextColumns(columns.map((item, indexItem) => {\n      indexItem === index ? item.edit = true : item.edit = false\n      return item\n    }))\n  }\n\n  const handleChange = (e, colNumber) => {\n    let editedColumns = columns.map((item, indexItem) => {\n      if (indexItem === colNumber) {\n        item.text = e.target.value\n      }\n\n      return item\n    })\n    let editedColumnsString = editedColumns.map(item => item.text).join()\n    setTextColumns(editedColumns)\n    setText(editedColumnsString)\n  }\n\n  return (\n    <div className=\"page-wrapper\">\n      <h1>Layout Page</h1>\n      <button\n        onClick={() => handleColumns(1, pageText)}\n        className=\"columnButton oneColumn\"\n      >\n      </button>\n      <button\n        onClick={() => handleColumns(2, pageText)}\n        className=\"columnButton twoColumn\"\n      >\n      </button>\n      <button\n        onClick={() => handleColumns(3, pageText)}\n        className=\"columnButton threeColumn\"\n      >\n      </button>\n      <div className=\"row\">\n    { columns.map((item, index) => item.edit === false ?\n       <div\n         onClick={() => handleEdit(index)}\n         style={{width: `calc(100%/${numberOfColumns})` }}\n         className=\"text\"\n       >\n         {item.text}\n       </div> :\n       <textarea\n         cols = \"30\"\n         rows = \"10\"\n         onChange={(e)=> handleChange(e, index)}\n         value={item.text}\n         onBlur={() => handleEdit(item.edit)}\n         style={{width: `calc(100%/${numberOfColumns})` }}\n         className=\"text\"\n       ></textarea>\n       )}\n      </div>\n    </div>\n  )\n}\n\nexport default Layout","import React, { useState } from \"react\"\nimport \"../styles/inputStyles.css\"\n\nfunction gotToLayoutPage (props, text) {\n  props.history.push({\n    pathname: `/layout`,\n    state: { text: text }\n  })\n}\n\nfunction Input(props) {\n  const [text, setText] = useState('');\n\n  return (\n    <div className=\"input-field-wrapper\">\n      <textarea\n        className=\"input-field\"\n        onChange={(event)=> { setText(event.target.value)}}>\n      </textarea>\n      <button\n        onClick={() => gotToLayoutPage(props, text)}\n        className=\"button\"\n      >LAYOUT</button>\n    </div>\n  )\n}\n\nexport default Input","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport Layout from './components/Layout'\nimport Input from './components/Input'\n\nfunction App() {\n  return (\n    <Router basename={`${process.env.PUBLIC_URL}/`}>\n      <div>\n        <Switch>\n          <Route exact path=\"/layout\" component={Layout} />\n          <Route exact path=\"/\" component={Input} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}